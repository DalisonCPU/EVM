bullet@[] bullets;
class bullet
{
	int distance;
	string owner, somarma, mapname, loopid, loopsound;
	int sx, sy, weapon, x, y, facing, range, dano, velocidade;
	bullet(int d, int r, int s1, int s2, int fa, string own, int weap, string map, int spee = 2, string sarm = "", string lsound = "")
	{
		this.velocidade = spee;
		this.loopid = lsound;
		mapname = map;
		facing = fa;
		sx = s1;
		sy = s2;
		x = s1;
		y = s2;
		if (this.loopid != "")
			this.loopid = spawn_moving_sound(this.loopid, this.x, this.y, this.mapname);
		dano = d;
		range = r;
		owner = own;
		weapon = weap;
		somarma = sarm;
	}
}
void bulletloop()
{
	if (!pvp)
		return;
	if (canhaos.length() > 0)
		canhaoloop();
	for (uint ie5 = 0; ie5 < bullets.length(); ie5++)
	{
		if (bullets[ie5].facing == Left)
		{
			bullets[ie5].x -= 1;
			bullets[ie5].distance += 1;
			if (bullets[ie5].loopid != "")
				update_moving_sound(bullets[ie5].loopid, bullets[ie5].x, bullets[ie5].y);
			if (bullets[ie5].dano > 2)
				bullets[ie5].dano -= 3;
			bulletcheck(ie5);
		}
		else if (bullets[ie5].facing == Right)
		{
			bullets[ie5].x += 1;
			bullets[ie5].distance += 1;
			if (bullets[ie5].loopid != "")
				update_moving_sound(bullets[ie5].loopid, bullets[ie5].x, bullets[ie5].y);
			if (bullets[ie5].dano > 2)
				bullets[ie5].dano -= 3;
			bulletcheck(ie5);
		}
		else if (bullets[ie5].facing == Forward)
		{
			bullets[ie5].y += 1;
			bullets[ie5].distance += 1;
			if (bullets[ie5].loopid != "")
				update_moving_sound(bullets[ie5].loopid, bullets[ie5].x, bullets[ie5].y);
			if (bullets[ie5].dano > 2)
				bullets[ie5].dano -= 3;
			bulletcheck(ie5);
		}
		else if (bullets[ie5].facing == Back)
		{
			bullets[ie5].y -= 1;
			bullets[ie5].distance += 1;
			if (bullets[ie5].loopid != "")
				update_moving_sound(bullets[ie5].loopid, bullets[ie5].x, bullets[ie5].y);
			if (bullets[ie5].dano > 2)
				bullets[ie5].dano -= 3;
			bulletcheck(ie5);
		}
	}
}
void bulletcheck(int b)
{
	string surface = get_tile_at(bullets[b].x, bullets[b].y, bullets[b].mapname);
	string loc = get_zone_at(bullets[b].x, bullets[b].y, bullets[b].mapname);
	int ba2 = get_player_index_from(bullets[b].owner);
	string srico;
	if (string_contains(loc, "safe", 1) > -1 || bullets[b].distance >= bullets[b].range || ba2 < 0 || players[ba2].map == "túnel" || players[ba2].pacifico == 1)
	{
		if (bullets[b].loopid != "")
			destroy_moving_sound(bullets[b].loopid);
		bullets.remove_at(b);
		return;
	}
	if (bullets[b].weapon == 1 || bullets[b].weapon == 0)
	{
		srico = "chuterico.ogg";
	}
	else if (bullets[b].weapon == 2)
	{
		srico = "kniferico.ogg";
	}
	else if (bullets[b].weapon == 6)
	{
		srico = "arcorico.ogg";
	}
	else if (bullets[b].weapon == 8)
	{
		srico = "m240rico.ogg";
	}
	else if (bullets[b].weapon == 9)
	{
		srico = "rocketmiss.ogg";
	}
	else if (bullets[b].weapon == 12)
	{
		srico = "laserrico.ogg";
	}
	else if (bullets[b].weapon == 13)
	{
		srico = "bazucarico.ogg";
	}
	else if (bullets[b].weapon == 14)
	{
		srico = "grenaderico.ogg";
	}
	else if (bullets[b].weapon == 15)
	{
		srico = "sniperrico.ogg";
	}
	else if (bullets[b].weapon == 18)
	{
		if (players[ba2].rajada == 1)
		{
			players[ba2].rajada = 0;
			srico = "ricothree.ogg";
		}
		else
			srico = "rico" + random(1, 7) + ".ogg";
	}
	else if (bullets[b].weapon == 26)
	{
		if (players[ba2].rajada == 1)
		{
			players[ba2].rajada = 0;
			srico = "ricofive.ogg";
		}
		else
			srico = "rico" + random(1, 7) + ".ogg";
	}
	else if (bullets[b].weapon == 19)
	{
		srico = "m60rico.ogg";
	}
	else if (bullets[b].weapon == 20 || bullets[b].weapon == 29 || bullets[b].weapon == 30)
	{
		srico = "espadarico.ogg";
	}
	else if (bullets[b].weapon == 21)
	{
		srico = "remingtonrico.ogg";
	}
	else if (bullets[b].weapon == 22)
	{
		srico = "dozerico.ogg";
	}
	else if (bullets[b].weapon == 23)
	{
		srico = "vulcanrico.ogg";
	}
	else if (bullets[b].weapon == 28)
	{
		srico = "chuterico.ogg";
	}
	else if (bullets[b].weapon == 34)
		srico = "molotovexplode.ogg";
	else if (bullets[b].weapon == 35)
		srico = "";
	else
	{
		srico = "rico" + random(1, 7) + ".ogg";
	}
	int dano = bullets[b].dano;
	for (uint bu = 0; bu < walls.length(); bu++)
	{
		if (bullets[b].x == walls[bu].x && walls[bu].map == bullets[b].mapname)
		{
			if (bullets[b].y == 0)
				walls[bu].vida -= dano;
			if (srico != "")
				send_packet3(0, "play " + srico + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	for (uint bu = 0; bu < projeteis.length(); bu++)
	{
		if (bullets[b].x == projeteis[bu].x && bullets[b].y == projeteis[bu].y && bullets[b].mapname == projeteis[bu].map)
		{
			destroy_moving_sound(projeteis[bu].somprojetei);
			projeteis.remove_at(bu);
			send_packet_unreliable(0, bullets[b].x, "rs 18 " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	if (bullets[b].weapon == 35)
	{
		for (uint n = 0; n < fogoqueimars.length(); n++)
		{
			if (fogoqueimars[n].x == bullets[b].x && fogoqueimars[n].y == bullets[b].y && fogoqueimars[n].map == bullets[b].mapname)
			{
				destroy_moving_sound(fogoqueimars[n].somfogo);
				fogoqueimars.remove_at(n);
			}
		}
	}
	int amount = (bullets[b].dano);
	int pozic;
	for (uint bu = 0; bu < dragonsauros.length(); bu++)
	{
		if (bullets[b].x == dragonsauros[bu].x && bullets[b].y == dragonsauros[bu].y && bullets[b].mapname == dragonsauros[bu].map)
		{
			send_packet_unreliable(0, bullets[b].x, "rico dragonsauroapanhando.ogg " + bullets[b].x + " " + bullets[b].y + " " + bullets[b].mapname, bullets[b].mapname);
			if (bu > dragonsauros.length())
				return;
			send_packet_unreliable(0, bullets[b].x, "rs " + bullets[b].somarma + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			if (bu > dragonsauros.length())
				return;
			dragonsauros[bu].vida -= dano;
			dragonsauros[bu].golpeado = bullets[b].owner;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	for (uint bu = 0; bu < megadragonsauros.length(); bu++)
	{
		if (bullets[b].x == megadragonsauros[bu].x && bullets[b].y == megadragonsauros[bu].y && bullets[b].mapname == megadragonsauros[bu].map)
		{
			send_packet_unreliable(0, bullets[b].x, "rico dragonsauroapanhando.ogg " + bullets[b].x + " " + bullets[b].y + " " + bullets[b].mapname, bullets[b].mapname);
			send_packet_unreliable(0, bullets[b].x, "rs " + bullets[b].somarma + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			megadragonsauros[bu].vida -= 10000000;
			megadragonsauros[bu].golpeado = bullets[b].owner;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	for (uint bu = 0; bu < robo_coletores.length(); bu++)
	{
		if (bullets[b].x == robo_coletores[bu].x && bullets[b].y == robo_coletores[bu].y && bullets[b].mapname == robo_coletores[bu].mapa)
		{
			send_packet_unreliable(0, bullets[b].x, "rico roboapanhando1.ogg " + bullets[b].x + " " + bullets[b].y + " " + bullets[b].mapname, bullets[b].mapname);
			send_packet_unreliable(0, bullets[b].x, "rs " + bullets[b].somarma + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			robo_coletores[bu].vida -= dano;
			robo_coletores[bu].golpeado = bullets[b].owner;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	for (uint bu = 0; bu < tubaraos.length(); bu++)
	{
		if (bullets[b].x == tubaraos[bu].x && bullets[b].y == tubaraos[bu].y && bullets[b].mapname == tubaraos[bu].map)
		{
			send_packet_unreliable(0, bullets[b].x, "rico tubaraoapanhando" + random(1, 3) + ".ogg " + bullets[b].x + " " + bullets[b].y + " " + bullets[b].mapname, bullets[b].mapname);
			if (bu > tubaraos.length())
				return;
			send_packet_unreliable(0, bullets[b].x, "rs " + bullets[b].somarma + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			if (bu > tubaraos.length())
				return;
			tubaraos[bu].vida -= dano;
			tubaraos[bu].golpeado = bullets[b].owner;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	for (uint bu = 0; bu < bebesauros.length(); bu++)
	{
		if (bullets[b].x == bebesauros[bu].x && bullets[b].y == bebesauros[bu].y && bullets[b].mapname == bebesauros[bu].map && bebesauros[bu].nasceu)
		{
			send_packet_unreliable(0, bullets[b].x, "rs " + bullets[b].somarma + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			if (bu > bebesauros.length())
				return;
			send_packet_unreliable(0, bullets[b].x, "play bbsauroapanhando" + random(1, 2) + ".ogg " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			if (bu > bebesauros.length())
				return;
			bebesauros[bu].golpeado = bullets[b].owner;
			bebesauros[bu].vida -= dano;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	for (uint bu = 0; bu < hcavernas.length(); bu++)
	{
		if (bullets[b].x == hcavernas[bu].x && bullets[b].y == hcavernas[bu].y && bullets[b].mapname == hcavernas[bu].mapa && hcavernas[bu].morreu == 0 && hcavernas[bu].morrendo == 0)
		{
			send_packet_unreliable(0, bullets[b].x, "rs " + bullets[b].somarma + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			hcavernas[bu].vida -= dano;
			hcavernas[bu].golpeado = bullets[b].owner;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	for (uint bu = 0; bu < carrosfortes.length(); bu++)
	{
		if (bullets[b].x == carrosfortes[bu].x && bullets[b].y == carrosfortes[bu].y && bullets[b].mapname == carrosfortes[bu].mapa)
		{
			string s = bullets[b].somarma;
			if (s == "8")
				s = "robothitfive.ogg";
			else if (s == "9")
				s = "robothitthree.ogg";
			else
				s = "robothit" + random(1, 6) + ".ogg";
			send_packet_unreliable(0, bullets[b].x, "play " + s + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			carrosfortes[bu].golpeado = bullets[b].owner;
			carrosfortes[bu].vida -= dano;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	for (uint bu = 0; bu < helicopteros.length(); bu++)
	{
		if (bullets[b].x == helicopteros[bu].x && bullets[b].y == helicopteros[bu].y && bullets[b].mapname == helicopteros[bu].map)
		{
			string s = bullets[b].somarma;
			if (s == "8")
				s = "robothitfive.ogg";
			else if (s == "9")
				s = "robothitthree.ogg";
			else
				s = "robothit" + random(1, 6) + ".ogg";
			send_packet_unreliable(0, bullets[b].x, "play " + s + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			helicopteros[bu].vida -= dano;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	int aa = bullets[b].weapon;
	if (aa == 3 || aa == 10 || aa == 11 || aa == 15 || aa == 21 || aa == 22)
		dano = 999999;
	for (uint bu = 0; bu < guardasandar.length(); bu++)
	{
		if (bullets[b].x == guardasandar[bu].x && bullets[b].y == guardasandar[bu].y && bullets[b].mapname == guardasandar[bu].mapa)
		{
			send_packet_unreliable(0, bullets[b].x, "rs " + bullets[b].somarma + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			if (bu > guardasandar.length())
				return;
			guardasandar[bu].vida -= dano;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	for (uint bu = 0; bu < ratos.length(); bu++)
	{
		if (bullets[b].x == ratos[bu].x && bullets[b].y == ratos[bu].y && bullets[b].mapname == ratos[bu].map)
		{
			send_packet_unreliable(0, bullets[b].x, "rs " + bullets[b].somarma + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			if (bu > ratos.length())
				return;
			ratos[bu].golpeado = bullets[b].owner;
			ratos[bu].vida -= dano;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	for (uint bu = 0; bu < macacos.length(); bu++)
	{
		if (bullets[b].x == macacos[bu].x && bullets[b].y == macacos[bu].y && bullets[b].mapname == macacos[bu].map)
		{
			send_packet_unreliable(0, bullets[b].x, "rico macacoapanhando" + random(1, 3) + ".ogg " + bullets[b].x + " " + bullets[b].y + " " + bullets[b].mapname, bullets[b].mapname);
			if (bu > macacos.length())
				return;
			send_packet_unreliable(0, bullets[b].x, "rs " + bullets[b].somarma + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			if (bu > macacos.length())
				return;
			macacos[bu].vida -= dano;
			macacos[bu].golpeado = bullets[b].owner;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	for (uint bu = 0; bu < lobos.length(); bu++)
	{
		if (bullets[b].x == lobos[bu].x && bullets[b].y == lobos[bu].y && bullets[b].mapname == lobos[bu].map)
		{
			send_packet_unreliable(0, bullets[b].x, "rico loboapanhando" + random(1, 3) + ".ogg " + bullets[b].x + " " + bullets[b].y + " " + bullets[b].mapname, bullets[b].mapname);
			if (bu > lobos.length())
				return;
			send_packet_unreliable(0, bullets[b].x, "rs " + bullets[b].somarma + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			if (bu > lobos.length())
				return;
			lobos[bu].vida -= dano;
			lobos[bu].golpeado = bullets[b].owner;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	for (uint bu = 0; bu < cachorros.length(); bu++)
	{
		if (bullets[b].x == cachorros[bu].x && bullets[b].y == cachorros[bu].y && bullets[b].mapname == cachorros[bu].map)
		{
			send_packet_unreliable(0, bullets[b].x, "rs " + bullets[b].somarma + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			if (bu > cachorros.length())
				return;
			send_packet_unreliable(0, bullets[b].x, "rs cachorroapanhando" + random(1, 2) + ".ogg " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			if (bu > cachorros.length())
				return;
			cachorros[bu].vida -= dano;
			cachorros[bu].golpeado = bullets[b].owner;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	for (uint bu = 0; bu < coelhos.length(); bu++)
	{
		if (bullets[b].x == coelhos[bu].x && bullets[b].y == coelhos[bu].y && bullets[b].mapname == coelhos[bu].mapa)
		{
			send_packet_unreliable(0, bullets[b].x, "rs " + bullets[b].somarma + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			send_packet_unreliable(0, bullets[b].x, "rs coelhoapanha.ogg " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			coelhos[bu].vida -= dano;
			coelhos[bu].golpeado = bullets[b].owner;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	for (uint bu = 0; bu < zumbis.length(); bu++)
	{
		if (bullets[b].x == zumbis[bu].x && bullets[b].y == zumbis[bu].y && bullets[b].mapname == zumbis[bu].mapa && zumbis[bu].morreu == 0 && zumbis[bu].morrendo == 0)
		{
			send_packet_unreliable(0, bullets[b].x, "rs " + bullets[b].somarma + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			send_packet_unreliable(0, bullets[b].x, "rs z_apanha.ogg " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			zumbis[bu].vida -= dano;
			zumbis[bu].golpeado = bullets[b].owner;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	for (uint bu = 0; bu < sequestrador2s.length(); bu++)
	{
		if (bullets[b].x == sequestrador2s[bu].x && bullets[b].y == sequestrador2s[bu].y && bullets[b].mapname == sequestrador2s[bu].mapa && sequestrador2s[bu].morreu == 0 && sequestrador2s[bu].morrendo == 0)
		{
			send_packet_unreliable(0, bullets[b].x, "rs " + bullets[b].somarma + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			sequestrador2s[bu].vida -= dano;
			sequestrador2s[bu].golpeado = bullets[b].owner;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	for (uint bu = 0; bu < sequestradors.length(); bu++)
	{
		if (bullets[b].x == sequestradors[bu].x && bullets[b].y == sequestradors[bu].y && bullets[b].mapname == sequestradors[bu].map)
		{
			send_packet_unreliable(0, bullets[b].x, "rs " + bullets[b].somarma + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			if (bu > sequestradors.length())
				return;
			sequestradors[bu].vida -= dano;
			sequestradors[bu].golpeado = bullets[b].owner;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	for (uint bu = 0; bu < mercenarios.length(); bu++)
	{
		if (bullets[b].x == mercenarios[bu].x && bullets[b].y == mercenarios[bu].y && bullets[b].mapname == mercenarios[bu].map)
		{
			send_packet_unreliable(0, bullets[b].x, "rs " + bullets[b].somarma + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			if (bu > mercenarios.length())
				return;
			mercenarios[bu].vida -= dano;
			mercenarios[bu].golpeado = bullets[b].owner;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	for (uint bu = 0; bu < ursos.length(); bu++)
	{
		if (bullets[b].x == ursos[bu].x && bullets[b].y == ursos[bu].y && bullets[b].mapname == ursos[bu].map)
		{
			send_packet_unreliable(0, bullets[b].x, "rs " + bullets[b].somarma + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
			if (bu > ursos.length())
				return;
			ursos[bu].vida -= dano;
			ursos[bu].golpeado = bullets[b].owner;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	if (pvp == false)
		return;
	dano = amount;
	for (uint ie4 = 0; ie4 < players.length(); ie4++)
	{
		ba2 = get_player_index_from(bullets[b].owner);
		if (bullets[b].weapon == 13 && bullets[b].x == players[ie4].x && bullets[b].owner != players[ie4].charname && !players[ie4].insz && bullets[b].mapname == players[ie4].map && !players[ie4].newbie && !players[ie4].afk && bullets[b].mapname != mapainicial && players[ie4].map != mapainicial && get_bala_y_distance(bullets[b], players[ie4]) > -1 && get_bala_y_distance(bullets[b], players[ie4]) <= 3 && (ba2 > -1 && players[ba2].x != players[ie4].x) || bullets[b].x == players[ie4].x && bullets[b].y == players[ie4].y && bullets[b].owner != players[ie4].charname && !players[ie4].insz && bullets[b].mapname == players[ie4].map && !players[ie4].newbie && !players[ie4].afk && bullets[b].mapname != mapainicial && players[ie4].map != mapainicial)
		{
			for (uint bunda = 0; bunda < players[ba2].nomesequipe.length(); bunda++)
			{
				if (players[ba2].nomesequipe[bunda] == players[ie4].charname)
				{
					return;
				}
			}
			for (uint bunda = 0; bunda < players.length(); bunda++)
			{
				if (players[bunda].charname != bullets[b].owner && bullets[b].x == players[bunda].x && bullets[b].y == players[bunda].y && bullets[b].mapname == players[bunda].map && players[bunda].equipedesafio == players[ba2].equipedesafio && players[bunda].equipemortal == players[ba2].equipemortal && bullets[b].mapname == "desafio_constante")
					return;
			}
			if (players[ie4].pacifico == 1)
				return;
			if (players[ie4].star == true)
			{
				send_packet_unreliable(0, bullets[b].x, "play lih.ogg " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
				if (bullets[b].loopid != "")
					destroy_moving_sound(bullets[b].loopid);
				bullets.remove_at(b);
				return;
			}
			int d = 2;
			if (string_contains(players[ie4].tarma, "mp7", 1) > -1 || string_contains(players[ie4].tarma, "ak48", 1) > -1 || string_contains(players[ie4].tarma, "bazuca", 1) > -1 || string_contains(players[ie4].tarma, "galil", 1) > -1)
				d = 1;
			pozic = random(d, 6);
			if (pozic == 2 && players[ie4].capacetepolicia == 0)
				amount = (amount * 4);
			else if (pozic == 3 && players[ie4].coturnomilitar == 0)
				amount = (amount * 3);
			else if (pozic >= 4 && players[ie4].coletemilitar == 0 && players[ie4].coletecamuflado == 0)
				amount = (amount * 2 - 5);
			if (players[ie4].star2)
			{
				ba2 = get_player_index_from(bullets[b].owner);
				if (ba2 < 0)
					return;
				if (pozic == 1)
				{
					if (aa == 10 || aa == 15)
						amount = 999999;
				}
				send_packet_unreliable(0, bullets[b].x, "play lih.ogg " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
				players[ba2].health -= amount;
				send_packet(0, "inithurt " + players[ba2].voice + " " + players[ba2].x + " " + players[ba2].y, players[ba2].map);
				players[ba2].lasthit = players[ie4].charname;
				if (bullets[b].loopid != "")
					destroy_moving_sound(bullets[b].loopid);
				bullets.remove_at(b);
				return;
			}
			if (pozic == 1)
			{
				send_packet_unreliable(0, bullets[b].x, "play ba.ogg " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
				if (ie4 > players.length())
					return;
				if (bullets[b].weapon == 13)
				{
					if (players[ie4].bazuca > 0)
						players[ie4].bazuca -= 1;
					else
					{
						send_packet_unreliable(0, bullets[b].x, "play arma_quebrada.ogg " + players[ie4].x + " " + players[ie4].y, players[ie4].map);
						players[ie4].inv_add_item("bazuca", -1, false);
						players[ie4].inv_add_item("bazuca_quebrada", 1);
						players[ie4].bazuca = 50000;
					}
				}
				else if (bullets[b].weapon == 31)
				{
					if (players[ie4].mp7 > 0)
						players[ie4].mp7 -= 1;
					else
					{
						send_packet_unreliable(0, bullets[b].x, "play arma_quebrada.ogg " + players[ie4].x + " " + players[ie4].y, players[ie4].map);
						players[ie4].inv_add_item("mp7", -1, false);
						players[ie4].inv_add_item("mp7_quebrada", 1);
						players[ie4].mp7 = 50000;
					}
				}
				else if (bullets[b].weapon == 36)
				{
					if (players[ie4].galil > 0)
						players[ie4].galil -= 1;
					else
					{
						send_packet_unreliable(0, bullets[b].x, "play arma_quebrada.ogg " + players[ie4].x + " " + players[ie4].y, players[ie4].map);
						players[ie4].inv_add_item("galil", -1, false);
						players[ie4].inv_add_item("galil_quebrada", 1);
						players[ie4].galil = 50000;
					}
				}
				if (bullets[b].loopid != "")
					destroy_moving_sound(bullets[b].loopid);
				bullets.remove_at(b);
				return;
			}
			else if (pozic >= 4 && players[ie4].colete_aprova_de_balas == 1 && players[ie4].ncolete > 0 && bullets[b].weapon != 13 && bullets[b].weapon != 14 && bullets[b].weapon != 9 && bullets[b].weapon != 12 && bullets[b].weapon != 34 && bullets[b].weapon != 23 && bullets[b].weapon != 27 && bullets[b].weapon != 28 && bullets[b].weapon != 29 && bullets[b].weapon != 30 && bullets[b].weapon != 20 && bullets[b].weapon != 6 && bullets[b].weapon != 1 && bullets[b].weapon != 2 && bullets[b].weapon != 35)
			{
				send_packet_unreliable(0, bullets[b].x, "rs 59 " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
				players[ie4].ncolete -= 1;
				if (bullets[b].loopid != "")
					destroy_moving_sound(bullets[b].loopid);
				bullets.remove_at(b);
				return;
			}
			else if (bullets[b].weapon == 6 && players[ba2].flecha == 1)
			{
				players[ba2].flecha = 0;
				players[ie4].nveneno += 6;
				players[ie4].envenenado = true;
			}
			else if (bullets[b].weapon == 18)
			{
				if (players[ba2].rajada == 1)
				{
					players[ba2].rajada = 0;
				}
			}
			else if (bullets[b].weapon == 26)
			{
				if (players[ba2].rajada == 1)
				{
					players[ba2].rajada = 0;
				}
			}
			else if (bullets[b].weapon == 27)
			{
				send_reliable(players[ie4].peer_id, "stopmoving", 0);
				players[ie4].paralisado = true;
				players[ie4].nparalisado += 15000;
				players[ie4].tparalisado.restart();
			}
			else if (bullets[b].weapon == 28)
			{
				if (bullets[b].facing == Left)
					players[ie4].x -= 1;
				else if (bullets[b].facing == Right)
					players[ie4].x += 1;
				send_packet(0, "update_player2 " + players[ie4].charname + " " + players[ie4].x + " "        + players[ie4].y + " " + players[ie4].map, players[ie4].map);
			}
			else if (bullets[b].weapon == 34)
			{
				if (string_contains(surface, "wood", 1) > -1 || string_contains(surface, "carpet", 1) > -1 || string_contains(surface, "bransh", 1) > -1 || string_contains(surface, "bridge", 1) > -1 || string_contains(surface, "deck", 1) > -1 || string_contains(surface, "plank", 1) > -1 || string_contains(surface, "stairs", 1) > -1)
					colocar_fogoqueimar(bullets[b].x, bullets[b].y, 70000, bullets[b].mapname);
				else if (string_contains(surface, "water", 1) > -1 || string_contains(surface, "brejo", 1) > -1 || string_contains(surface, "mud", 1) > -1 || string_contains(surface, "shallow", 1) > -1 || string_contains(surface, "snow", 1) > -1)
					colocar_fogoqueimar(bullets[b].x, bullets[b].y, 2000, bullets[b].mapname);
				else if (string_contains(surface, "ice", 1) > -1)
					colocar_fogoqueimar(bullets[b].x, bullets[b].y, 22000, bullets[b].mapname);
				else
					colocar_fogoqueimar(bullets[b].x, bullets[b].y, 40000, bullets[b].mapname);
				amount = (players[ie4].health / 10);
			}
			string a = bullets[b].somarma + " " + bullets[b].x + " " + bullets[b].y;
			send_packet2(0, "finalhit " + a, players[ie4].voice, bullets[b].mapname);
			players[ie4].lasthit = bullets[b].owner;
			if (pozic == 2)
			{
				if (aa == 10 || aa == 15)
					amount = 999999;
			}
			if (amount <= 2)
				amount = random(20, 30);
			players[ie4].health -= amount;
			if (bullets[b].loopid != "")
				destroy_moving_sound(bullets[b].loopid);
			bullets.remove_at(b);
			return;
		}
	}
	surface = get_tile_at(bullets[b].x, bullets[b].y, bullets[b].mapname);
	if (string_contains(surface, "wall", 1) > -1 || string_contains(surface, "pwall", 1) > -1)
	{
		if (srico != "")
			send_packet3(0, "play " + srico + " " + bullets[b].x + " " + bullets[b].y, bullets[b].mapname);
		if (bullets[b].loopid != "")
			destroy_moving_sound(bullets[b].loopid);
		bullets.remove_at(b);
		return;
	}
}
void spawn_bullet(int p1, int p2, int p3, int p4, int p5, string p6, int p7, string p8, int p9 = 20, string p11 = "", string p10 = "")
{
	bullet b1(p1, p2, p3, p4, p5, p6, p7, p8, p9, p11, p10);
	bullets.insert_last(b1);
}
